fn sum_squares() -> i32 {
    mut lst = [1, 2, 3];
    mut result = [0, 0, 0];
    mut i = 0;
    while i < 3 {
        mut square = 0;
        mut j = 0;
        while j < lst[i] {
            square = square + lst[i];
            j = j + 1;
        }
        result[i] = square;
        i = i + 1;
    }
    mut sum = 0;
    i = 0;
    while i < 3 {
        sum = sum + result[i];
        i = i + 1;
    }
    sum
}
fn main() -> i32 {
    compeval sum_squares()
}
